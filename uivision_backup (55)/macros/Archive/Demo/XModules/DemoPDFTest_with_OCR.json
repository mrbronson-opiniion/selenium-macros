{
  "Name": "DemoPDFTest_with_OCR",
  "CreationDate": "2024-2-1",
  "Commands": [
    {
      "Command": "store",
      "Target": "fast",
      "Value": "!replayspeed",
      "Description": ""
    },
    {
      "Command": "if_v2",
      "Target": "${!browser} ==\"firefox\"",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "throwError",
      "Target": "This macro works only in Chrome and Edge - Firefox does not support automating PDF documents yet.",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "end",
      "Target": "",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "open",
      "Target": "http://download.ui.vision/demo/pdf-test.pdf",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "setWindowSize",
      "Target": "800x700",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "comment",
      "Target": "Check that PDF is loaded OK",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "comment",
      "Target": "Option 1: Check with image search",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "visualAssert",
      "Target": "pdftest_salesquote.png@0.35",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "comment",
      "Target": "Option 2: Check with text search  search",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "store",
      "Target": "ENG",
      "Value": "!ocrlanguage",
      "Description": ""
    },
    {
      "Command": "store",
      "Target": "1",
      "Value": "!ocrengine",
      "Description": "Online OCR uses the OCR API at https://ocr.space - on this website you can test the different OCR engines directly and use the one that works best."
    },
    {
      "Command": "store",
      "Target": "true",
      "Value": "!ocrscale",
      "Description": "Upscaling can help with smaller fonts"
    },
    {
      "Command": "OCRSearch",
      "Target": "sales quote",
      "Value": "matches",
      "Description": "Search the (visible part of the ) PDF for the word \"sales quote\""
    },
    {
      "Command": "echo",
      "Target": "Number of matches: ${matches}",
      "Value": "green",
      "Description": ""
    },
    {
      "Command": "if_v2",
      "Target": "${matches} == \"0\"",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "throwError",
      "Target": "Something wrong, I can not find the text <sales quote>",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "end",
      "Target": "",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "comment",
      "Target": "Now extract the quote number and check that it is the correct one",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "XClickRelative",
      "Target": "getquotenumber_dpi_96_relative.png@0.30",
      "Value": "",
      "Description": "Takes a screenshof the area inside the pink box and OCR its. The extracted area can be checked by looking at the \"__lastscreenshot.png\" image in the Screenshots tab"
    },
    {
      "Command": "OCRExtractRelative",
      "Target": "getquotenumber_dpi_96_relative.png@0.30",
      "Value": "q",
      "Description": "Takes a screenshof the area inside the pink box and OCR its. The extracted area can be checked by looking at the \"__lastscreenshot.png\" image in the Screenshots tab"
    },
    {
      "Command": "echo",
      "Target": "Extracted text in pink area: >${q}<",
      "Value": "blue",
      "Description": ""
    },
    {
      "Command": "executeScript",
      "Target": "return ${q}.replace(/( |\\n|\\r)/gm, \"\")",
      "Value": "q",
      "Description": ""
    },
    {
      "Command": "echo",
      "Target": "Remove space(s) and line break(s): Quote Number: >${q}<",
      "Value": "green",
      "Description": ""
    },
    {
      "Command": "executeScript_Sandbox",
      "Target": "var string = ${q}, substring = \"135\";  b= string.lastIndexOf(substring)>=0; return b;",
      "Value": "textfound",
      "Description": "lastIndexOf>=0 is true if the substring is found inside the q variable, see https://forum.ui.vision/t/string-search-startswith-and-includes/10081/3"
    },
    {
      "Command": "if_v2",
      "Target": "${textfound} == true",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "echo",
      "Target": "Quote number OK",
      "Value": "green",
      "Description": ""
    },
    {
      "Command": "else",
      "Target": "",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "throwError",
      "Target": "Wrong quote number. Extracted text was >${q}<",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "end",
      "Target": "",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "comment",
      "Target": "The X... commands require the RealUser XModule to be installed",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "pause",
      "Target": "500",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "comment",
      "Target": "Click on the document to give it the focus. For this, we click on the word \"SALES QUOTE\".",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "XClick",
      "Target": "ocr=sales quote",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "comment",
      "Target": "Scroll down to next page",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "if_v2",
      "Target": "${!os}==\"mac\"",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "comment",
      "Target": "Page scroll in macOS is CMD key + Down",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "XType",
      "Target": "${KEY_CMD+KEY_DOWN}",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "else",
      "Target": "",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "comment",
      "Target": "Page scroll in Windows and Linux is PAGE DOWN key",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "XType",
      "Target": "${KEY_PAGE_DOWN}${KEY_PAGE_DOWN}",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "end",
      "Target": "",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "comment",
      "Target": "Find link image and click it",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "comment",
      "Target": "Wait 0.5 seconds for the PDF to complete scrolling. Otherwise if the Xclick image is found while the PDF still scrolls, the click goes to the wrong location.",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "pause",
      "Target": "500",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "XClick",
      "Target": "ocr=website",
      "Value": "",
      "Description": "For XClick to work correctly make sure the browser zoom is at 100%. Otherwise the calculated x/y are wrong."
    },
    {
      "Command": "comment",
      "Target": "Check the right page is loaded (here: check logo is there)",
      "Value": "",
      "Description": ""
    },
    {
      "Command": "assertElementPresent",
      "Target": "//*[@id=\"logo\"]/img",
      "Value": "",
      "Description": "Make sure the previous XClick was successful "
    }
  ]
}